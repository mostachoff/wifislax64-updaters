#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20190301

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=wireshark
	EXTENSION=tar.xz
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://www.wireshark.org/download/src/
	VERSION=$(curl -s https://www.wireshark.org|grep -i stable|head -1|rev|cut -d ' ' -f1|rev|sed 's/.$//g')
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	CD=$PRGNAM-$VERSION
	DOWNLOAD=$WEB/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="
cmake
libmaxminddb
c-ares
libdbus-c++
libiec61883
libxml++
libconfig
libffado
celt
jack-audio-connection-kit
portaudio
libsmi
krb5
jansson
nghttp2
spandsp
lz4
snappy
libxkbcommon
gts
graphviz
python3
ninja
meson
pyudev
libwacom
python-evdev
libinput
freetds
OpenAL
libwebp
opus
postgresql
qt5
"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
# Configuramos
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1
mkdir -p build
cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -D INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DCMAKE_BUILD_TYPE=Release ..

# Compilamos
echo ""
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
make all || exit 1
make install DESTDIR=$PKG || exit 1

# headers
cd ..
install -Dm 644 *.h -t "${PKG}/usr/include/wireshark"
for d in epan epan/crypt epan/dfilter epan/dissectors epan/ftypes epan/wmem epan/wslua wiretap wsutil; do
install -Dm 644 ${d}/*.h -t "${PKG}/usr/include/wireshark/${d}"
done

# desktop
install -Dm 644 wireshark.desktop -t "${PKG}/usr/share/applications"

# Eliminamos los ficheros .la
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Creamos una config basica
CONFIG=$PKG/$HOME/.$PRGNAM
mkdir -p $CONFIG

echo "# Main window maximized.
# TRUE or FALSE (case-insensitive).
gui.geometry_main_maximized: TRUE
# Warn if running with elevated permissions (e.g. as root).
# TRUE or FALSE (case-insensitive).
privs.warn_if_elevated: FALSE" > $CONFIG/recent
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Descomprimir sources
f_descomprimir
#Cd a ruta
f_cd
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales