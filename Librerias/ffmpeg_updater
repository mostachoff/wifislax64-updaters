#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20190108

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=ffmpeg
	EXTENSION=tar.xz
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://ffmpeg.org/releases
	RAMA=3.4
	VERSION=$(curl -s $WEB/|grep -o $RAMA.[0-9]*.$EXTENSION|sort -u|tail -1|cut -dt -f-1|sed 's/.$//g')
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	CD=$PRGNAM-$VERSION
	DOWNLOAD=$WEB/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="gavl
frei0r
libilbc
nv-codec-headers
lame
speex
libmodplug
celt
ladspa_sdk
libdbus-c++
libconfig
libxml++
libavc1394
libiec61883
libffado
jack-audio-connection-kit
opus
libfdk-aac
soxr
libwebp
x264
x265
xvidcore
recode
perl-Cstools
perl-Unicode-Map
perl-Unicode-String
perl-Unicode-Map8
enca
libass
libaacs
libbluray
gsm
opencore-amr
vid.stab
SDL2
rtmpdump"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){

echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

echo "/Td6WFoAAATm1rRGAgAhARYAAAB0L+Wj4Af/AU1dADNhsOBmbmH7qtVXqE2fj2aAwmEli7+vIL6J
74CzIl8aN4cX0+1KMjHJahVBpZbdYxBg4Zeo8z0RQzzNck+J3UUbp1et62UiQ7nvOjTW9vYVDdvm
GtIFV0ECkoasj8bYvfsCyAppN0z2ZLtn9EMJDj2/i4yl0v7OQ/N4CeUI551Q6Ii1hYwRwze80Pmz
7fWvfhwCp7C9mZg25ZrkM3qbc/7vNAYKqL+z6XtFxg3qeYR1iT9JJAh627Zy6EzYAtISEzOVkvez
yhCaI1nbjb7EnfNtT0ibTnFv59/k4Up88XltXBdtugU8Rttr1vCjyqxGAha6ut7O12r33XFqywuA
vtZuDb1NmOngSBRUGby5zH3/GX1fRM5Im580NC0mD/5od+gwmJ2kDcdd4+gSKyU3Yiv6W9OYKlR7
FlusCBhBoZ48Tvo3RYCtyxZUyEjigAAAAADagkvVMCpG0QAB6QKAEAAAvNihebHEZ/sCAAAAAARZ
Wg=="|base64 -d > $TMP/patches.tar.xz

tar xvf $TMP/patches.tar.xz &>/dev/null

patch -p0 -i ./ffmpeg-3.2.4-libfdk_aac-2.0.0.patch||exit 1

# Fix linking with flite
sed -i "s| -lflite\"| -lflite -lm -lasound\"|" \
  ./configure

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --shlibdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --disable-doc \
  --disable-htmlpages \
  --disable-podpages \
  --disable-txtpages \
  --disable-debug \
  --disable-static \
  --disable-stripping \
  --enable-avresample \
  --enable-fontconfig \
  --enable-frei0r \
  --enable-gmp \
  --enable-gnutls \
  --enable-ladspa \
  --enable-libass \
  --enable-libbluray \
  --enable-libcaca \
  --enable-libdrm \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libfribidi \
  --enable-libgsm \
  --enable-libiec61883 \
  --enable-libilbc \
  --enable-libmodplug \
  --enable-libmp3lame \
  --enable-libopencore_amrnb \
  --enable-libopencore_amrwb \
  --enable-libopenjpeg \
  --enable-libopus \
  --enable-libpulse \
  --enable-librtmp \
  --enable-libsoxr \
  --enable-libspeex \
  --enable-libssh \
  --enable-libtheora \
  --enable-libv4l2 \
  --enable-libvidstab \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libwavpack \
  --enable-libwebp \
  --enable-libx264 \
  --enable-libx265 \
  --enable-libxcb \
  --enable-libxml2 \
  --enable-libxvid \
  --enable-libsmbclient \
  --enable-opengl \
  --enable-nvenc \
  --enable-shared \
  --enable-gpl \
  --enable-version3 \
  --enable-nonfree \
  --arch=$ARCH
  
  make || exit 1
  make install DESTDIR=$PKG
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Descomprimir sources
f_descomprimir
#Cd a ruta
f_cd
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales